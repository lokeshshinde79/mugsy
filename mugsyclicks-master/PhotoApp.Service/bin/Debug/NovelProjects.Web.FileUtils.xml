<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NovelProjects.Web.FileUtils</name>
    </assembly>
    <members>
        <member name="T:NovelProjects.Web.DownloadObject">
            <summary>
            This object is for passing and returning 
            </summary>
        </member>
        <member name="M:NovelProjects.Web.DownloadObject.#ctor">
            <summary>
            DownloadObject
            </summary>
        </member>
        <member name="M:NovelProjects.Web.DownloadObject.#ctor(System.Byte[],System.String)">
            <summary>
            DownloadObject
            </summary>
            <param name="FileData">Byte Array</param>
            <param name="Extension">File extension, ie .zip, .pdf etc</param>
        </member>
        <member name="M:NovelProjects.Web.DownloadObject.#ctor(System.Byte[],System.String,System.String)">
            <summary>
            DownloadObject
            </summary>
            <param name="FileData">Byte Array</param>
            <param name="Extension">File extension, ie .zip, .pdf etc</param>
            <param name="FileName">File name. Does not need to contain the extension</param>
        </member>
        <member name="T:NovelProjects.Web.FileUtils">
            <summary>
            Methods for prompting and streaming file downloads.
            </summary>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.ReadFully(System.IO.Stream)">
            <summary>
            Reads data from a stream until the end is reached. The
            data is returned as a byte array. An IOException is
            thrown if any of the underlying IO calls fail.
            </summary>
            <param name="stream">The stream to read data from</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.ReadFully(System.IO.Stream,System.Int64)">
            <summary>
            Reads data from a stream until the end is reached. The
            data is returned as a byte array. An IOException is
            thrown if any of the underlying IO calls fail.
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="initialBufferLength">The initial buffer length</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.ReadFully(System.IO.Stream,System.Int32)">
            <summary>
            Reads data from a stream until the end is reached. The
            data is returned as a byte array. An IOException is
            thrown if any of the underlying IO calls fail.
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="initialBufferLength">The initial buffer length</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.ReadFully(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Reads data from a stream until the end is reached. The
            data is returned as a byte array. An IOException is
            thrown if any of the underlying IO calls fail.
            </summary>
            <param name="stream">The stream to read data from</param>
            <param name="initialBufferLength">The initial buffer length</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.StreamDownload(System.Byte[],System.String)">
            <summary>
            This Streams the Download of a given ByteArray
            </summary>
            <param name="FileData">Byte Array</param>
            <param name="Extension">File extension, ie .zip, .pdf etc</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.StreamDownload(System.Byte[],System.String,System.Web.HttpContext)">
            <summary>
            This Streams the Download of a given ByteArray
            </summary>
            <param name="FileData">Byte Array</param>
            <param name="Extension">File extension, ie .zip, .pdf etc</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.PromptDownload(System.String,System.String)">
            <summary>
            Prompts the download of the File. The FileName does not need to contain the file extension.
            </summary>
            <param name="FilePath">The fully qualified name of the file, or the relative file name.</param>
            <param name="FileName">Name of the file, does not need to contain the file extension.</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.PromptDownload(System.String,System.String,System.String)">
            <summary>
            Prompts the download of the File. The FileName does not need to contain the Extension.
            </summary>
            <param name="FilePath">The fully qualified name of the file, or the relative file name.</param>
            <param name="Extension">The file extension, ie .zip, .pdf etc.</param>
            <param name="FileName">Name of the file, does not need to contain the file extension.</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.PromptDownload(System.Byte[],System.String,System.String)">
            <summary>
            This Prompts for the Download of a given ByteArray.  The FileName does not need to contain the Extension.
            </summary>
            <param name="FileData">Byte Array</param>
            <param name="Extension">File extension, ie .zip, .pdf etc</param>
            <param name="FileName">The FileName does not need to contain the Extension</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.PromptDownload(System.Byte[],System.String,System.String,System.Web.HttpContext)">
            <summary>
            This Prompts for the Download of a given ByteArray.  The FileName does not need to contain the Extension.
            </summary>
            <param name="FileData">Byte Array</param>
            <param name="Extension">File extension, ie .zip, .pdf etc</param>
            <param name="FileName">The FileName does not need to contain the Extension</param>
            <param name="Context">The current web request.</param>
        </member>
        <member name="M:NovelProjects.Web.FileUtils.GetContentType(System.String)">
            <summary>
            Gets the type of the content.
            </summary>
            <param name="extension">The file extension.</param>
            <returns></returns>
        </member>
    </members>
</doc>
